<?xml version="1.0" encoding="UTF-8"?>
<project name="trails" default="build.parallel">

	<!-- setup environment -->
	<property environment="env" />
	<property file="build.properties" />
	<property name="build.name" value="${env.JOB_NAME}" />
	<property name="build.number" value="${env.BUILD_NUMBER}" />
	<property name="build.git.revision" value="${env.GIT_COMMIT}" />
	<property name="build.git.branch" value="${env.GIT_BRANCH}" />
	<property name="build.path.src" value="${basedir}" />
	<property name="build.path.test" value="${basedir}/app/tests" />
	<property name="build.path.report" value="${basedir}/report" />
	

	<!-- build targets -->
	<target name="build" depends="info,prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb,idehelper" />
	<target name="build.fast" depends="info,prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb,idehelper" />
	<target name="build.parallel" depends="info,prepare,lint,tools-parallel,phpunit,phpcb,idehelper" />
	<target name="build.travisci" depends="prepare,lint,phpunit" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="4">
			<sequential>
				<antcall target="pdepend" />
				<antcall target="phpmd-ci" />
			</sequential>
			<antcall target="phpcpd" />
			<antcall target="phpcs-ci" />
			<antcall target="phploc" />
			<antcall target="phpdox" />
			<antcall target="idehelper" />
		</parallel>
	</target>

	<target name="info" description="Print debug information">
		<echo>-----------------------------</echo>
		<echo>Build:    ${build.name}</echo>
		<echo>ID:       ${build.number}</echo>
		<echo>Revision: ${build.git.revision}</echo>
		<echo>Branch:   ${build.git.branch}</echo>
		<echo>Source:   ${build.path.src}</echo>
		<echo>-----------------------------</echo>
	</target>

	<target name="debug" depends="info" description="Print debug information">
		<echoproperties />
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${build.path.report}" includes="**/*" />
		</delete>
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${build.path.report}/api" />
		<mkdir dir="${build.path.report}/code-browser" />
		<mkdir dir="${build.path.report}/coverage" />
		<mkdir dir="${build.path.report}/logs" />
		<mkdir dir="${build.path.report}/pdepend" />
		<mkdir dir="${build.path.report}/phpdox" />
	</target>

	<target name="lint" description="Perform syntax check of sourcecode files">
		<exec executable="bash" failonerror="true">
				<arg value="-c" />
        <arg value="find . -name '*.php' -not -path './vendor/*' -not -name '_ide_helper.php' -print0 | xargs -0 -n 1 -P 4 php -l" />
    </exec>
	</target>

	<target name="phploc" depends="prepare" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--log-csv" />
			<arg value="${build.path.report}/logs/phploc.csv" />
			<arg value="--count-tests" />
			<arg path="${build.path.src}" />
			<arg value="--exclude vendor" />
			<arg value="--exclude _ide_helper.php" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${build.path.report}/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${build.path.report}/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${build.path.report}/pdepend/overview-pyramid.svg" />
			<arg value="--ignore=vendor" />
			<arg value="--ignore=_ide_helper.php" />
			<arg path="${build.path.src}" />
		</exec>
	</target>

	<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpmd">
			<arg path="${build.path.src}" />
			<arg value="text" />
			<arg value="${basedir}/phpmd.xml" />
			<arg value="--exclude vendor" />
			<arg value="--exclude _ide_helper.php" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="phpmd">
			<arg path="${build.path.src}" />
			<arg value="xml" />
			<arg value="${basedir}/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${build.path.report}/logs/pmd.xml" />
			<arg value="--exclude vendor" />
			<arg value="--exclude _ide_helper.php" />
		</exec>
	</target>

	<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpcs">
			<arg value="--standard=${basedir}/phpcs.xml" />
			<arg value="--ignore=vendor" />
			<arg value="--ignore=_ide_helper.php" />
			<arg path="${build.path.src}" />
		</exec>
	</target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${build.path.report}/logs/checkstyle.xml" />
			<arg value="--standard=${basedir}/phpcs.xml" />
			<arg value="--ignore=vendor" />
			<arg value="--ignore=_ide_helper.php" />
			<arg path="${build.path.src}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--log-pmd" />
			<arg value="${build.path.report}/logs/pmd-cpd.xml" />
			<arg path="${build.path.src}" />
			<arg value="--exclude" />
			<arg value="vendor" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox" />
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true" />
	</target>

	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--log" />
			<arg path="${build.path.report}/logs" />
			<arg value="--source" />
			<arg path="${build.path.src}" />
			<arg value="--output" />
			<arg path="${build.path.report}/code-browser" />
			<arg value="--ignore=src/vendor" />
		</exec>
	</target>

	<target name="idehelper" description="Run artisan to update IDE mappings">
		<exec dir="${build.path.src}" executable="php" failonerror="true">
			<arg value="artisan" />
			<arg value="clear-compiled" />
		</exec>
		<exec dir="${build.path.src}" executable="php" failonerror="true">
			<arg value="artisan" />
			<arg value="-M" />
			<arg value="ide-helper:generate" />
		</exec>
		<exec dir="${build.path.src}" executable="php" failonerror="true">
			<arg value="artisan" />
			<arg value="optimize" />
		</exec>
	</target>
	
	<target name="composer.update" description="Run a composer update">
		<exec dir="${build.path.src}" executable="composer" failonerror="true">
			<arg value="update" />
		</exec>
	</target>
</project>
